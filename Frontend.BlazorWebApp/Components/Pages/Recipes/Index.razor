@page "/recipes"
@rendermode InteractiveServer

@using System.Net.Http.Json
@using Backend.Shared.Models.Recipes
@using Frontend.BlazorWebApp.Components.Pages.Recipes.Components

@inject IHttpClientFactory HttpFactory

<div class="container bg-white vh-100 align-items-center flex-column">
    <header class="w-100 d-flex justify-content-center pt-2">
        <div class="px-4" style="border-bottom: 1px solid #C5C5C5">
            <h3 class="text-center">Receptajánló AI segítségével</h3>
        </div>
    </header>
    @if (selectedRecipe == null && (recipes == null || !recipes.Any()))
    {
        <RecipeSearchForm
        Description="@recipeDescription"
        DescriptionChanged="d => recipeDescription = d"
        Ingredients="ingredients"
        IngredientsChanged="list => ingredients = list"
        OnSearchClicked="GetRecipes" />
    }
    else if (selectedRecipe == null)
    {
        <RecipeList
        Recipes="recipes"
        OnSelectRecipe="r => SelectRecipe(r)" />
    }
    else
    {
        <RecipeDetail
        Recipe="selectedRecipe"
        OnBack="() => selectedRecipe = null" />
    }
</div>

@code {
    private string recipeDescription = "";
    private List<string> ingredients = new();

    private IReadOnlyList<RecipeSuggestionDto>? recipes;
    private RecipeSuggestionDto? selectedRecipe;

    private HttpClient? _http;

    protected override void OnInitialized()
    {
        _http = HttpFactory.CreateClient("RecipesClient");
    }

    private async Task GetRecipes()
    {
        if (_http == null) return;

        var request = new RecipeRequestDto(recipeDescription, ingredients);

        try
        {
            var resp = await _http.PostAsJsonAsync("generate", request);
            if (resp.IsSuccessStatusCode)
            {
                var result = await resp.Content.ReadFromJsonAsync<RecipesResponseDto>();
                if (result is null || result.Recipes is null)
                    throw new NullReferenceException("Az api válasza null");

                recipes = result.Recipes;
                selectedRecipe = null;
            }
            else
            {
                Console.Error.WriteLine($"Hiba: {resp.ReasonPhrase}");
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Kivétel a lekérés során: {ex.Message}");
        }
    }

    private void SelectRecipe(RecipeSuggestionDto r)
    {
        selectedRecipe = r;
    }
}